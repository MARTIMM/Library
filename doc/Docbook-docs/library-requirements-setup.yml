#!/usr/bin/env yaml2any
#
---
################################################################################
# - Docbook v5.* do not use a dtd defined with DOCTYPE anymore
# - Program to translate is xsltproc
# - Stylesheets are found at /usr/share/sgml/docbook
#
# Book to describe the Data2any perl module
#
################################################################################
# 
- DocumentControl:
   Translator: Xml

   SendTo:
    xml: '| xmllint --format - > __BASENAME__.xml'
    xep: |
     | xsltproc --encoding utf-8 --xinclude book-stylesheet.xsl -
     | xep -fo - -pdf __BASENAME__.pdf
    chk: |
     | tee Data2any.xml | xmllint --format -
     | rnv /usr/share/xml/docbook5/schema/rng/5.0/__BASENAME__.rnc

- XML version=1.0 encoding=utf-8:
- DOCTYPE root=article:
   entities:
    - company "Acme Mc Carpenter, Inc"
    - product "Library"
    - github "https://github.com/MARTIMM/Library.git"

- article:
  xmlns=http://docbook.org/ns/docbook:
  xmlns:xi=http://www.w3.org/2001/XInclude:
  xmlns:xl=http://www.w3.org/1999/xlink:
  version=5.0 xml:lang=en:
   - title: Library Requirements Document
   - info:
      - author:
         - personname:
            - firstname: Marcel
            - surname: Timmerman
	 - email: mt1957@gmail.com
      - address:
         - city: Haarlem
	 - country: Netherlands
      - copyright:
         - year: 2015
	 - holder: Marcel Timmerman
      - date: $date
#      - abstract:
#         - para: >
#	    &product; is capable of transforming an internally build data
#	    structure into xml after which it is possible to store it in a file
#	    or send it to any program for conversion or some other type of
#	    processor. 
#	 - para: Version of yaml2any when book is written: $version_yaml2any
#	 - para: Version of Data2any when book is written: $version_Data2any
#	 - para: Generated on date $date.

#   - dedication:
#      - para: >
#	 To my wife Juhi, who finds me too often behind the computer.

   - sect1:
      - title: Introduction
      - para: >
         Long ago I've started to think about how to maintain the large amount
         of documents on my system which consists of anything textual or
         imaginary like photos. Storing on disk you can give it a name and
         store in some place in the hope that you can find it later. You can
         than also make links to the same data to provide extra information in
         the form of a filename. This will soon be a problem when the file is
         placed in another location.

      - para: >
         I now wanted a solution which does not duplicate any information
         except for a backup and also not clobbering the filesystem with links
         to some other location. And there this program comes in.

      - para: >
         In this document I try to make clear what is needed to build the
         modules and program and what to build myself. This must be viewed in
         light of a set of prioritized requirements.


   - sect1:
      - title: Ideas to implement
      - para: >
         Here a list of thoughts will show what I like to include in this
         system. It does not mention if this will be feasable or not. That will
         come in a later part where things like dependencies will be
         investigated.

      - sect2:
         - title: Files can be located anywhere
         - para: >
            This system will not manage documents. It will manage metadata
            about the documents. So it is not nessesary to store them
            somewhere. It is however nice when it can detect duplicates
            when another document is entered by the user.
            This duplication can be caused by backups or archives.

      - sect2:
         - title: Not only files
         - para: >

      - sect2:
         - title: Metadata
         - para: >

         - sect3:
            - title: Use of mimetypes and document suffixes
            - para: >
               Mimetypes are an important type of description method to show
               what can be done with the document. The list can also be used
               to start native applications to process a particular document.
               According to their mimetype of the document it mostly has also
               a proper suffix such as emphasis[.txt] or emphasis[.html]. See
               also citation[MIMETYPES].
            - para: >
               A few examples are
            - itemizedlist:
               - listitem:
                  - para: >
                     emphasis[text/plain:] This is simple text format mostly
                     created with simple text editors.
               - listitem:
                  - para: >
                     emphasis[audio/mpeg3:] A type of audio file with document
                     suffix of emphasis[mp3].

         - sect3:
            - title: Use of protocols
            - para: >
               Protocols are used to get to the document before processing it.
               E.g. the emphasis[http] protocol is used to get a webpage from a
               site on the network and emphasis[file] is used often to get a
               document from the local filesystem. See also
               citation[MIMETYPES].
            - para: >
               The following list is a series of protocols which might be
               supported.
            - itemizedlist:
               - listitem:
                  - para: >
                     emphasis[file:] Protocol to get documents from a
                     filesystem.
               - listitem:
                  - para: >
                     emphasis[http] and emphasis[https:] Protocols to get
                     webpage documents from a web server.
               - listitem:
                  - para: >
                     emphasis[ftp:] File transfer protocol.

   - sect1:
      - title: Implementation
      - para: >


   - sect1:
      - title: Dependencies
      - para: >
         The program will be depending on several modules and programs. That
         is  only logical because we do not want to reinvent the wheel(s) again
         do we? We only try not to select those software which will bind it to
         some platform as explained above.
      - itemizedlist:
         - listitem:
            - para: >
               emphasis[perl6:] The followup version of perl 5.*. The program
               is not yet completely finished but will be soon (2015-01). This
               program is a interpreter/compiler which can compile the script into some
               intermediary
         - listitem:
            - para: >
               emphasis[perl6:] The followup version of perl 5.*. The program
               is not yet completely finished but will be soon (2015-01).

   - sect1:
      - title: Priorities
      - para: >


#   - bibliolist:
#      - title: Bibliography
   - bibliography:
      - biblioentry:
         - abbrev: MIMETYPES
         - title: A list of all mimetypes
         - abstract: A list of mimetypes can be found on the
         - ulink url=http://www.sitepoint.com/web-foundations/mime-types-complete-list/:
            - internet
#   - index:

---
- X:
   - !perl/Data2any::Any::IncludeDocument
      type: include
      reference: book-preface.yml
      document: 0	 

   - !perl/Data2any::Any::IncludeDocument
      type: include
      reference: book-chapter-intro-data.yml
      document: 0

   - !perl/Data2any::Any::IncludeDocument
      type: include
      reference: book-chapter-yaml-code.yml
      document: 0

   - !perl/Data2any::Any::IncludeDocument
      type: include
      reference: book-chapter-data-structure.yml
      document: 0

   - !perl/Data2any::Any::IncludeDocument
      type: include
      reference: book-appendix-install.yml
      document: 0

