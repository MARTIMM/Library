@startuml


package "MongoDB driver" #AAAAAA {
'  set namespaceSeparator ::
  class MC as "MongoDB::Client"
  class MDB as "MongoDB::Database"
  class MCL as "MongoDB::Collection"

  MC -[hidden]- MDB
  MDB -[hidden]- MCL
}

class Client

package "Metadata library " #FFFFFF {

  class L as "Library" << (P,#FF8800) package >> {
    our Library::Configuration $lib-cfg
    our MongoDB::Client $client

    initialize-library( Str :$library-config )
  }

  class LC as "Library::Configuration" {
    has Str $!config-filename
    has Hash $.config

    submethod BUILD ( Str :$library-config )
    method save ( )

    method !check-config ( )
  }

  class LD as "Library::Database" << (R,#FFFF00) role >> {
    has MongoDB::Database $!database
    has MongoDB::Collection $!collection handles <find>

    method init ( Str:D :$database-key!, Str:D :$collection-key! )
    method insert ( Array $documents --> BSON::Document )
    method delete ( Array $deletes --> BSON::Document )
    method count ( List $query --> BSON::Document )
    method drop-database ( --> BSON::Document )
  }

  class LMD as "Library::Metadata::Database" {
    has Library::MetaData::Object $!meta-object
    submethod BUILD ( )
    method update-meta( Str $object, ObjectType $type --> Library::Metadata::Object )
  }

  class Obj as "Library::Metadata::Object" << (R,#FFFF00) role >> {
    has BSON::Document $!meta-data
    has $!dbo where  .^name ~~ 'Library::Metadata::Database'

    method init-meta ( Str :$object, ObjectType :$type ) { ... }   # Abstract
    method update-meta ( ) { ... } # Abstract

    submethod BUILD ( :$dbo, Str :$object, ObjectType :$type )
    method meta ( --> BSON::Document )
    method get-user-metadata ( --> BSON::Document )
    multi method set-user-metadata ( List:D $data --> BSON::Document )
    multi method set-user-metadata ( BSON::Document:D $data --> BSON::Document )
    method !update-usermeta ( --> BSON::Document )
    method !sha1 ( Str $s --> Str )
    method !sha1-content ( Str $object --> Str )
    method !find-in-db ( List:D $query --> Bool )
    method !add-meta ( )
  }

  class OTF as "Library::Metadata::Object::File" {
    method init-meta ( Str :$object, ObjectType :$type )
    method update-meta ( )
  }

  class OTD as "Library::Metadata::Object::Directory" {
    method init-meta ( Str :$object, ObjectType :$type )
    method update-meta ( )
  }


  MC <--* L
  LC --* L

  L --* LD
  MDB <-right-* LD
  MCL <-right-* LD

  LMD <-up-* Client
  LD <|-- LMD

  OTF <--* LMD
  OTD <--* LMD
  Obj <|-- OTF
  Obj <|-- OTD
}

@enduml
